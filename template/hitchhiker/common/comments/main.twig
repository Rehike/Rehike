{% macro comment_thread(item) %}
{% set comment = item.commentThreadRenderer.commentRenderer %}
<section class="comment-thread-renderer   "  data-visibility-types="12" data-priority="0">
   {{ _self.comment(comment) }}
   {% if item.commentThreadRenderer.commentRepliesRenderer %}
   {% set replies = item.commentThreadRenderer.commentRepliesRenderer %}
   {% set repliesToken = replies.contents.0.continuationItemRenderer.continuationEndpoint.continuationCommand.token %}
   <div class="comment-replies-renderer">
      <div class="yt-uix-expander yt-uix-expander-collapsed comment-replies-renderer-header" tabindex="0">
         <div class="yt-uix-expander-collapsed-body">
            {% if replies.viewReplies %}
            {% set viewRepliesText = rehike.getText(replies.viewReplies.buttonRenderer.text) %}
            {{ _self.loadMoreLink('action_get_comment_replies', comment.commentId, repliesToken, viewRepliesText, true) }}
            <div class="yt-uix-expander-head comment-replies-renderer-expander-down comment-replies-renderer-view hid" tabindex="0">
               {{ viewRepliesText }}
            </div>
            {% endif %}
            {%- for item in replies.teaserContents -%}
               {{ _self.comment(item.commentRenderer, true) }}
            {%- endfor -%}
         </div>
         {% if replies.hideReplies %}
         <div id="comment-replies-renderer-{{ comment.commentId }}" class="yt-uix-expander-body comment-replies-renderer-pages">
            <div class="yt-uix-expander-head comment-replies-renderer-expander-up comment-replies-renderer-hide" tabindex="0">
               {{ rehike.getText(replies.hideReplies.buttonRenderer.text) }}
            </div>
         </div>
         {% endif %}
      </div>
   </div>
   {% endif %}
</section>
{% endmacro %}

{% macro comment(comment, isReply) %}
<div class="comment-renderer {{ comment.isLiked ? "liked" }}   "  data-visibility-types="12" data-cid="{{ comment.commentId }}">
   <a href="{{ rehike.getUrl(comment.authorEndpoint) }}" class="spf-link ">
      {% set thumbnailSize = (comment.isReply or isReply) ? '32' : '48' %}
      <span class="video-thumb comment-author-thumbnail yt-thumb yt-thumb-{{ thumbnailSize }}">
         <span class="yt-thumb-square">
            <span class="yt-thumb-clip">
               <img alt="{{ rehike.getText(comment.authorText) }}" data-ytimg="1" height="{{ thumbnailSize }}" onload=";window.__ytRIL &amp;&amp; __ytRIL(this)" role="img" src="{{ comment.authorThumbnail.thumbnails.0.url }}" tabindex="0" width="{{ thumbnailSize }}">
               <span class="vertical-align"></span>
            </span>
         </span>
      </span>
   </a>
   {# If we support editing this comment, then we want to encode the text as a HTML attribute
      for the data-editable-content-text attribute. #}
   {%- if comment.actionMenu.rhButtonsSupported.edit -%}
      {# This should technically be something like find the edit button and then put
         .menuNavigationItemRenderer.navigationEndpoint.updateCommentReplyDialogEndpoint
         .dialog.commentReplyDialogRenderer.editableText, but this works just as well... #}
      {% set editableContentText = rehike.getText(comment.actionMenu.rhButtonsSupported.edit.rhEditDialog.editableText)
      %}
   {%- endif -%}
   <div id="comment-renderer-edit-{{ comment.commentId }}" class="comment-simplebox-edit" data-editable-content-text="{{ editableContentText|e('html_attr') }}" data-image-src="" data-video-id="">
   </div>
   <div class="comment-renderer-content">
      {% if comment.pinnedCommentBadge %}
      <div class="comment-renderer-pinned-comment-badge">    {{ rehike.getText(comment.pinnedCommentBadge.pinnedCommentBadgeRenderer.label) }}</div>
      {% endif %}
      <div class="comment-renderer-header">
         {{ _self.channelLink(comment) }}
         <span class="comment-renderer-time" tabindex="0"><a href="{{ rehike.getUrl(comment.publishedTimeText.runs[0]) }}" class="spf-link ">{{ rehike.getText(comment.publishedTimeText) }}</a>
         </span>
         {%- if comment.linkedCommentBadge -%}
            <span class="comment-renderer-linked-comment">{{ comment.linkedCommentBadge.metadataBadgeRenderer.label }}</span>
         {%- endif -%}
     </div>
      <div class="comment-renderer-text" tabindex="0" role="article">
         <div class="comment-renderer-text-content">{{ _self.textContent(comment.contentText) }}</div>
         <div class="comment-text-toggle hid">
            <div class="comment-text-toggle-link read-more">
                <button class="yt-uix-button yt-uix-button-size-default yt-uix-button-link" type="button" onclick="return false;">
                    <span class="yt-uix-button-content">{{ rehike.getText(comment.expandButton.buttonRenderer.text) }}</span>
               </button>
            </div>
            <div class="comment-text-toggle-link show-less hid">
                <button class="yt-uix-button yt-uix-button-size-default yt-uix-button-link" type="button" onclick="return false;">
                    <span class="yt-uix-button-content">{{ rehike.getText(comment.collapseButton.buttonRenderer.text) }}</span>
                </button>
            </div>
         </div>
         {% if comment.backstageAttachment.backstageImageRenderer %}
            {{ _self.backstage_image(comment.backstageAttachment.backstageImageRenderer) }}
            {% from "common/comments/backstage/image_attachment_viewer.twig" import render as image_attachment_viewer %}
            {{ image_attachment_viewer(comment) }}
         {% endif %}
      </div>
      <div class="comment-renderer-footer" data-vote-status="INDIFFERENT">
         <div class="comment-action-buttons-toolbar">
            {%- from "common/uix/button.twig" import render as button -%}
            {% if comment.replyButton %}
            {{ button(comment.replyButton) }}
            {% endif %}
            {% if comment.voteCount and not comment.voteCount.indifferentText == "0" %}
            <span class="comment-renderer-like-count off">{{ comment.voteCount.indifferentText }}</span>
            <span class="comment-renderer-like-count on">{{ comment.voteCount.likedText }}</span>
            {% else %}
            <span class="comment-renderer-like-count on">1</span>
            {% endif %}
            {{ _self.like_button_group(comment) }}
            {% if comment.actionButtons.commentActionButtonsRenderer.creatorHeart %}
               {{ _self.creator_heart(comment.actionButtons.commentActionButtonsRenderer.creatorHeart.creatorHeartRenderer)  }}
            {% endif %}
            {% if rehike.signin.isSignedIn() %}
            <div class="yt-uix-menu-container comment-renderer-action-menu yt-section-hover-container">
               <div class="yt-uix-menu yt-uix-menu-flipped hide-until-delayloaded">
                  <button class="yt-uix-button yt-uix-button-size-default yt-uix-button-action-menu yt-uix-button-empty yt-uix-button-has-icon no-icon-markup  yt-uix-menu-trigger" type="button" onclick=";return false;" aria-haspopup="true" aria-label="{{ rehike.i18n.get("global", "actionMenuLabel") }}" aria-pressed="false" role="button"><span class="yt-uix-button-arrow yt-sprite"></span></button>
                  <div class="yt-uix-menu-content yt-ui-menu-content yt-uix-menu-content-hidden" role="menu">
                     {% if comment.actionMenu.rhButtonsSupported.pin %}
                        <ul>
                           <li role="menuitem">
                              <button type="button" class="yt-ui-menu-item yt-uix-menu-close-on-select">
                                 <span class="yt-ui-menu-item-label">{{ rehike.i18n.get("comments", "pinText") }}</span>
                              </button>
                           </li>
                        </ul>
                     {% endif %}
                     {% if comment.actionMenu.rhButtonsSupported.edit %}
                        {% set editButton = comment.actionMenu.rhButtonsSupported.edit %}
                        {% set editSimpleboxParams = comment.navigationEndpoint.updateCommentReplyDialogEndpoint
                         %}
                        <ul>
                           <li role="menuitem">
                              <button type="button" class="yt-ui-menu-item yt-uix-menu-close-on-select comment-renderer-edit"
                                 {# data-simplebox-id="comment-simplebox-edit-{{ comment.commentId }}" #}
                                 data-simplebox-label="{{ rehike.i18n.get("comments", "editText")|e('html_attr') }}"
                                 data-target="{{ comment.isReply 
                                    ? '/comment_service_ajax?action_update_comment_reply=1'
                                    : '/comment_service_ajax?action_update_comment=1' }}"
                                 data-params="{{ editButton.rhEditParams }}"
                                 {# data-simplebox-event="{{ comment.isReply ? 'replyupdated' : 'commentupdated' }}" #}
                              >
                                 <span class="yt-ui-menu-item-label">{{ rehike.i18n.get("comments", "editText") }}</span>
                              </button>
                           </li>
                        </ul>
                     {% endif %}
                     {% if comment.actionMenu.rhButtonsSupported.delete %}
                        {# TODO: Delete button needs a little more work to possibly work #}
                        <ul>
                           <li role="menuitem">
                              <button type="button" class="yt-ui-menu-item yt-uix-menu-close-on-select" data-params="GhpVZ3lROGljZVlqcU1ZMDAwbUo1NEFhQUJBZygCMgFGOmkIARACGhpVZ3lROGljZVlqcU1ZMDAwbUo1NEFhQUJBZyoLbXkyaF9fbDQxcWMwAEoVMTEyOTM1MjAzMzA1OTEyODQ0ODg1UACoAQy6ARhVQ202eUQyNkhsYWZ6cU5sWWFLN3VFYUHgAQA%3D" data-url="/flag_service_ajax?action_get_report_form=1">
                                 <span class="yt-ui-menu-item-label">{{ rehike.i18n.get("comments", "deleteText") }}</span>
                              </button>
                           </li>
                        </ul>
                     {% endif %}
                     {% if comment.actionMenu.rhButtonsSupported.report %}
                        <ul>
                           <li role="menuitem">
                              <div class="service-endpoint-action-container hid">
                              </div>
                              <button type="button" class="yt-ui-menu-item yt-uix-menu-close-on-select  report-form-modal-renderer" data-params="GhpVZ3lROGljZVlqcU1ZMDAwbUo1NEFhQUJBZygCMgFGOmkIARACGhpVZ3lROGljZVlqcU1ZMDAwbUo1NEFhQUJBZyoLbXkyaF9fbDQxcWMwAEoVMTEyOTM1MjAzMzA1OTEyODQ0ODg1UACoAQy6ARhVQ202eUQyNkhsYWZ6cU5sWWFLN3VFYUHgAQA%3D" data-url="/flag_service_ajax?action_get_report_form=1">
                                 <span class="yt-ui-menu-item-label">{{ rehike.i18n.get("comments", "reportText") }}</span>
                              </button>
                           </li>
                        </ul>
                     {% endif %}
                     {% if comment.actionMenu.rhButtonsSupported.block %}
                        <ul>
                           <li role="menuitem">
                              <div class="service-endpoint-action-container hid">
                              </div>
                              <button type="button" class="yt-ui-menu-item yt-uix-menu-close-on-select  report-form-modal-renderer" data-url="/flag_service_ajax?action_get_report_form=1">
                                 <span class="yt-ui-menu-item-label">{{ rehike.i18n.get("comments", "blockText") }}</span>
                              </button>
                           </li>
                        </ul>
                     {% endif %}
                  </div>
               </div>
            </div>
         {% endif %}
         </div>
         {% if rehike.signin.isSignedIn() %}
         <div class="comment-renderer-replybox" id="comment-simplebox-reply-{{ comment.commentId }}">
            <span class="video-thumb comment-author-thumbnail yt-thumb yt-thumb-32">
               <span class="yt-thumb-square">
                  <span class="yt-thumb-clip">
                     <img alt="{{ rehike.signin.getCurrentChannel().getDisplayName() }}" data-ytimg="1" height="32" onload=";window.__ytRIL &amp;&amp; __ytRIL(this)" role="img" src="{{ rehike.signin.getCurrentChannel().getAvatarUrl() }}" tabindex="0" width="32">
                     <span class="vertical-align"></span>
                  </span>
               </span>
            </span>
         </div>
         {% endif %}
      </div>
   </div>
</div>
{% endmacro %}

{%- macro channelLink(comment) -%}
{% if comment.authorIsChannelOwner %}
<span class="comment-renderer-author-comment-badge creator">
{% endif %}
   <a href="{{ comment.authorEndpoint.commandMetadata.webCommandMetadata.url }}" class="comment-author-text       spf-link ">{{ rehike.getText(comment.authorText) }}</a>
{% set verified = comment.authorCommentBadge.authorCommentBadgeRenderer.icon.iconType %}
{% if verified and comment.authorIsChannelOwner %}
   <span class="yt-badge comment-author-verified-badge yt-uix-tooltip" title="{{ yt.msgs.verified }}"><span class="yt-comment-author-verified-icon yt-sprite"></span></span>
{% elseif verified and not comment.authorIsChannelOwner %}
   <span aria-label="{{ yt.msgs.verified }}" class="yt-channel-title-icon-verified yt-uix-tooltip yt-sprite" data-tooltip-text="{{ yt.msgs.verified }}"></span>
{% endif %}
{% if comment.authorIsChannelOwner %}
</span>
{% endif %}
{%- endmacro -%}

{%- macro textContent(content) -%}
{%- for run in content.runs -%}
   {%- if run.navigationEndpoint -%}{%- apply spaceless -%}
      {%- set href = rehike.getUrl(run) -%}
      {%- set spf = (href|first == "/") -%}
      <a href="{{ href }}" class=" {{ spf ? 'spf-link' }}" target="_blank">{{ run.text|spaceless }}</a>
   {%- endapply -%}{%- elseif run.emoji.isCustomEmoji -%}
      <img class="yt-comments-custom-emoji {{ loop.first and loop.last ? 'large' }} yt-uix-tooltip" title="{{ run.text }}" alt="{{ run.text }}" src="{{ run.emoji.image.thumbnails.0.url }}">
   {%- else -%}
      {{ run.bold ? '<b>' }}{{ run.italics ? '<i>' }}{{ run.strikethrough ? '<s>' }}{{ run.text }}{{ run.strikethrough ? '</s>' }}{{ run.italics ? '</i>' }}{{ run.bold ? '</b>' }}
   {%- endif -%}
{%- endfor -%}
{%- endmacro -%}

{% macro loadMoreWidget(token) %}
<button class="yt-uix-button yt-uix-button-size-default yt-uix-button-default load-more-button yt-uix-load-more comment-section-renderer-paginator " type="button" onclick=";return false;" aria-label="{{ yt.msgs.showMore }}" 
data-uix-load-more-target-id="comment-section-renderer-items" data-uix-load-more-post-body="page_token={{ token }}"  data-uix-load-more-href="/comment_service_ajax?action_get_comments=1" data-sessionlink-target="/comment_service_ajax?action_get_comments=1" data-uix-load-more-post="true">
   <span class="yt-uix-button-content">
      <span class="load-more-loading hid">
         <span class="yt-spinner">
            <span title="{{ rehike.i18n.get("global", "loadingIconLabel") }}" class="yt-spinner-img  yt-sprite"></span>
            {{ yt.msgs.loading }}
         </span>
      </span>
     <span class="load-more-text">
         {{ yt.msgs.showMore }}
      </span>
   </span>
</button>
{% endmacro %}

{% macro loadMoreLink(action, commentId, token, text, style_down_arrow) %}
<button class="yt-uix-button yt-uix-button-size-default yt-uix-button-default load-more-button yt-uix-load-more comment-replies-renderer-paginator {{ style_down_arrow ? 'comment-replies-renderer-expander-down' }} yt-uix-button-link" type="button" onclick=";return false;" aria-label="{{ text }}" data-uix-load-more-href="/comment_service_ajax?{{ action }}=1" data-uix-load-more-post="true" data-uix-load-more-post-body="page_token={{ token }}" data-uix-load-more-target-id="comment-replies-renderer-{{ commentId }}"><span class="yt-uix-button-content">  <span class="load-more-loading hid">
<span class="yt-spinner">
<span class="yt-spinner-img  yt-sprite" title="{{ rehike.i18n.get("global", "loadingIconLabel") }}"></span>
{{ yt.msgs.loading }}
</span>
</span>
<span class="load-more-text">
{{ text }}
</span>
</span></button>
{% endmacro %}

{% macro like_button_group(comment) %}
{%- from "common/uix/button.twig" import render as button -%}
<span role="radiogroup">
{%- if comment.likeButton -%}
{{ button(comment.likeButton) }}
{%- endif -%}
{{ " " }}
{%- if comment.dislikeButton -%}
{{ button(comment.dislikeButton) }}
{%- endif -%}
</span>
{% endmacro %}

{% macro creator_heart(data) %}
   {# Creator heart is noticeably lazy #}
   {% set isEnabled = data.isEnabled %}
   {% set isHearted = data.isHearted %}
   {#
      The tooltip isn't ever swapped out, so handling it differently would be even
      weirder. This will unfortunately just have to say "Love" if the action is to unlove.
      Aria label does get swapped out, but the tooltip text is static.
   #}
   {% set defaultTooltip = data.unheartedTooltip %}
   {% set heartedTooltip = data.heartedTooltip %}
   {% set styleClass = isHearted ? "hearted" : "unhearted" %}
   <button class="yt-uix-creator-heart-button yt-uix-tooltip" aria-label="{{ isHearted ? heartedTooltip : defaultTooltip }}" data-tooltip-text="{{ isHearted ? heartedTooltip : defaultTooltip }}"{% if isEnabled %}
      data-aria-hearted="{{ data.heartedTooltip }}"
      data-aria-unhearted="{{ data.unheartedTooltip }}"
      {% if isHearted %}
         data-action-on="1"
      {% endif %}
      data-action-heart="{{ data.heartEndpoint.performCommentActionEndpoint.action }}"
      data-action-unheart="{{ data.unheartEndpoint.performCommentActionEndpoint.action }}"
      data-url="/comment_service_ajax?action_perform_comment_action=1"
   {% endif %}>
      <div class="creator-heart">
         <img src="{{ data.creatorThumbnail.thumbnails.0.url }}" class="creator-heart-background-{{ styleClass }}">
         <div class="creator-heart-big-{{ styleClass }}"></div>
         <div class="creator-heart-small-{{ styleClass }}">
            <div class="creator-heart-small-container">
               <div class="creator-heart-small-left" style="background: #ff0000;"></div>
               <div class="creator-heart-small-right" style="background: #ff0000;"></div>
            </div>
         </div>
      </div>
   </button>
{% endmacro %}

{% macro backstage_image(data) %}
<div class="comment-renderer-image-attachment yt-lockup-thumbnail yt-uix-image-attachment yt-uix-image-viewer" style="cursor: pointer;" role="button" tabindex="0">
   <img class="comment-image" src="{{ data.image.thumbnails.0.url }}">
</div>
{% endmacro %}
