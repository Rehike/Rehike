{# 
    Implements the core lightbox (dialog) macros for the Rehike
    debugger.
    
    @author Taniko Yamamoto <kirasicecreamm@gmail.com>
    @author The Rehike Maintainers
#}

{%- macro dialog(data) -%}
    {# 
        PATCH (dcooper): **This cannot have the yt-dialog class**, as it causes a bug in common.js at
        yt.ui.Dialog.prototype.isAnyDialogDisplayed_() --> goog.dom.getElementsByClass("yt-dialog")

        This bug breaks standard closing behaviour as implemented by YouTube's source code. The check essentially
        recognises the Rebug dialog container as a parent dialog to any further open dialogs, such as the subscription
        preferences one, and, as such, prevents the dialog from fully closing. This leaves the background sitting behind,
        with all references disposed of by the UIX Overlay class upon its understanding that the bound dialog had closed properly,
        therefore leaving it to the user to manually remove the dialog background scrim using Inspect Element or refreshing
        the page.

        Since there are no stylistic drawbacks to this change, I've opted to simply update Rebug to remove this class
        and completely fix the behaviour, which has been a thorn in the side of Rehike developers and users alike for
        months now.
    #}
    <div class="rebug-base-dialog">
        <div class="yt-dialog-base">
            <span class="yt-dialog-align"></span>
            <div role="dialog" tabindex="0" class="yt-dialog-fg yt-uix-overlay-primary yt-uix-overlay">
                <div class="yt-dialog-fg-content yt-dialog-show-content">
                    <div class="yt-dialog-content">
                        {{ _self.content(data) }}
                    </div>
                </div>
                <div class="yt-dialog-focus-trap" tabindex="0"></div>
            </div>
        </div>
    </div>
{%- endmacro -%}

{%- macro content(data) -%}
    {{ _self.dialog_header(data.header) }}
    <div class="rebug-main-content">
        {{ _self.dialog_tabs_switcher(data.tabs, rehikeDebugger.condensed) }}
        {{ _self.dialog_tabs_container(data.tabs) }}
    </div>
{%- endmacro -%}

{%- macro dialog_header(data) -%}
    <div class="yt-dialog-header">
        {%- if data.title -%}
            <h2 class="yt-dialog-title">
                {{ data.title }}
                {%- if data.helpLink -%}
                <a id="rebug-help-link" href="{{ data.helpLink.href }}" target="_blank">{{ data.helpLink.text }}</a>
                {%- endif -%}
            </h2>
        {%- endif -%}
        {%- if data.historyButton -%}
            {% from "/common/uix/button.twig" import render as button %}
            {{ button(data.historyButton) }}
        {%- endif -%}
        {%- if data.closeButton -%}
            {% from "/common/uix/button.twig" import render as button %}
            <div class="rebug-close-button-wrapper">
                {{ button(data.closeButton) }}
            </div>
        {%- endif -%}
    </div>
{%- endmacro -%}

{%- macro dialog_tabs_switcher(tabs, condensed) -%}
    <div id="rebug-tabs-switcher" class="{{ condensed ? "hid" : "full-view" }}">
        {%- for tab in tabs -%}
            <div class="rebug-tab {{ tab.selected ? "rebug-tab-selected" }}" data-tab-target="{{ tab.id }}">
                {{ tab.title }}
            </div>
        {%- endfor -%}
    </div>
{%- endmacro -%}

{%- macro dialog_tabs_container(tabs) -%}
    <div id="rebug-tabbed-content-wrapper">
        {%- for tab in tabs -%}
            {{ _self.dialog_tab_content(tab) }}
        {%- endfor -%}
    </div>
{%- endmacro -%}

{%- macro dialog_tab_content(data) -%}
    <div id="rebug-tab-content-{{ data.id }}" class="rebug-tab-content {{ data.selected ? "rebug-tab-selected" }}" data-tab-id="{{ data.id }}">
        {{ _self.rich_content_renderer(data.content.richDebuggerRenderer) }}
    </div>
{%- endmacro -%}

{%- macro error_renderer(data) -%}
    <div class="rebug-error-renderer error-{{ data.type }} rebug-expander rebug-expander-collapsed">
        <span class="icon error-icon-{{ data.type }} yt-sprite"></span>
        <span class="rebug-error-renderer-content">
            <b>{{ data.errorTypeText }}</b><span class="colon">:</span>
            <span class="collapsed-display">
                {#
                    File has to come first for the CSS to display
                    properly.    
                #}
                <span class="file">
                    {{ data.shortFile }}:{{ data.line }}
                </span>
                <span class="message">
                    {{ data.message }}
                </span>
            </span>
            <span class="expanded-display">
                <div class="message">
                    {{ data.message }}
                </div>
                <div class="file">
                    {{ data.file }}:{{ data.line }}
                </div>
            </span>
        </span>
    </div>
{%- endmacro -%}

{%- macro nothing_to_see_renderer(data) -%}
    <div class="nothing-to-see-renderer">
        <div class="text">{{ data.text }}</div>
    </div>
{%- endmacro -%}

{%- macro loading_renderer() -%}
    {% from "core/spinner.twig" import render as spinner %}
    <div class="loading">
        {{ spinner("Loading...") }}
    </div>
{%- endmacro -%}

{%- macro rich_content_renderer(data) -%}
    {%- for item in data -%}
        {%- if item.heading -%}
            <h1>{{ item.heading.text }}</h1>
        {%- elseif item.subheading -%}
            <h2>{{ item.subheading.text }}</h2>
        {%- elseif item.simpleText -%}
            {{ item.simpleText.text }}
        {%- elseif item.code -%}
            <code style="white-space:pre">{{ item.code.text }}</code>
        {%- elseif item.errorRenderer -%}
            {{ _self.error_renderer(item.errorRenderer) }}
        {%- elseif item.nothingToSeeRenderer -%}
            {{ _self.nothing_to_see_renderer(item.nothingToSeeRenderer) }}
        {%- elseif item.globalWalkerContainer -%}
            {% import "rehike/debugger/global_walker.twig" as global_walker %}
            {{ global_walker.container(item.globalWalkerContainer) }}
        {%- elseif item.loadingRenderer -%}
            {{ _self.loading_renderer() }}
        {%- endif -%}
    {%- endfor -%}
{%- endmacro -%}


    {{ _self.dialog(rehikeDebugger.dialog) }}
</div>