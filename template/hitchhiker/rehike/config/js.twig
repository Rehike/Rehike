/**
 * @fileoverview Implements the base JS for the Rehike config manager.
 * 
 * @author Daylin Cooper <dcoop2004@gmail.com>
 * @author Taniko Yamamoto <kirasicecreamm@gmail.com>
 * @version 1.0
 */

(function(){
/*{{ "*"~"/" }}

 {######################################################
 #                     IMPORTS.                        #
 ######################################################}

{% include "rehike/core/rehike-core.js.twig" %}

//*/

var rehike = rehike || {};
rehike.config = {};

/**
 *  @private
 *  @type {Element[]} 
 */
rehike.config.props_ = [];

/**
 * @private
 * @type {Object}
 */
rehike.config.modifications_ = {};

/**
 * @private
 * @type {Element}
 */
rehike.config.saveButton_ = null;

/**
 * @private
 * @type {Element}
 */
rehike.config.disableRehikeButton_ = null;

/**
 * Initialise the config manager.
 * 
 * @return {void}
 */
rehike.config.init = function() {
    var container = document.querySelector('.rehike-config-options-container');
    var props = container.querySelectorAll('.rehike-config-option');

    for (var i = 0, j = props.length; i < j; i++) {
        rehike.config.props_.push(props[i]);
    }

    rehike.eventDelegate.add('change', 'rehike-config-option-bool',
        rehike.config.onModifyBool_);
    
    rehike.eventDelegate.add('change', 'rehike-config-option-enum',
        rehike.config.onModifyEnum_);

    rehike.eventDelegate.add('click', 'rehike-config-save-button',
        rehike.config.submit_);

    rehike.eventDelegate.add('click', 'rehike-config-disable-rehike-button',
        rehike.config.disableRehike_);

    rehike.config.saveButton_ = document.querySelector(
        '.rehike-config-save-button');

    rehike.config.disableRehikeButton_ = document.querySelector(
        '.rehike-config-disable-rehike-button');
};

window.rehike = window.rehike || {};
window.rehike.config = window.rehike.config || {};
window.rehike.config.init = rehike.config.init;

/**
 * Called whenever a boolean is modified.
 * 
 * @private
 * 
 * @param {Element} prop 
 * @return {void}
 */
rehike.config.onModifyBool_ = function(prop) {
    var name = prop.getAttribute('data-cfg-name');
    var isChecked = rehike.class.has(prop, 'checked');

    rehike.config.modifyProp_(name, isChecked);
};

/**
 * Called whenever an enum is modified.
 * 
 * @private
 * 
 * @param {Element} prop 
 * @return {void}
 */
rehike.config.onModifyEnum_ = function(prop) {
    var name = prop.getAttribute('data-cfg-name');
    var value = prop.querySelector('select').value;

    rehike.config.modifyProp_(name, value);
};

/**
 * Called whenever a property element is modified.
 * 
 * @private
 * 
 * @param {string} prop
 * @param {*} value
 * 
 * @return {void}
 */
rehike.config.modifyProp_ = function(prop, value) {
    rehike.config.saveButton_.disabled = false;
    rehike.config.modifications_[prop] = value;
};

/**
 * Submit the modified configuration and reload the page
 * to reflect the changes.
 * 
 * @param {?function} onLoadCb
 */
rehike.config.submit_ = function(onLoadCb) {
    var json = JSON.stringify(rehike.config.modifications_);

    var xhr = new XMLHttpRequest();
    xhr.open('POST', '/rehike/update_config');
    xhr.onload = function() {
        if (xhr.status == 200)
        {
            if (typeof onLoadCb == "function")
            {
                onLoadCb();
            }
            else
            {
                location.reload();
            }
        }
    };
    xhr.setRequestHeader('Content-Type', 'application/json')
    xhr.send(json);
};

/**
 * Handles the click events sent to the "Disable Rehike" button.
 */
rehike.config.disableRehike_ = function() {
    var type = rehike.config.disableRehikeButton_.getAttribute(
        "data-disable-rehike-action"
    ) || "disable";

    if ("enable" == type.toLowerCase())
    {
        rehike.config.modifications_ = {};
        rehike.config.modifyProp_("hidden.disableRehike", false);
        rehike.config.submit_();
    }
    else
    {
        rehike.config.modifications_ = {};
        rehike.config.modifyProp_("hidden.disableRehike", true);
        rehike.config.submit_(function() {
            location.href = "/";
        });
    }
};

})();